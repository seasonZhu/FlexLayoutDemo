//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.image` struct is generated, and contains static references to 15 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `bcz_logo`.
    var bcz_logo: RswiftResources.ImageResource { .init(name: "bcz_logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bike_bg`.
    var bike_bg: RswiftResources.ImageResource { .init(name: "bike_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bike_lock`.
    var bike_lock: RswiftResources.ImageResource { .init(name: "bike_lock", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `delete`.
    var delete: RswiftResources.ImageResource { .init(name: "delete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `eye`.
    var eye: RswiftResources.ImageResource { .init(name: "eye", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `flexlayout-logo`.
    var flexlayoutLogo: RswiftResources.ImageResource { .init(name: "flexlayout-logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_comment`.
    var icon_comment: RswiftResources.ImageResource { .init(name: "icon_comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_like`.
    var icon_like: RswiftResources.ImageResource { .init(name: "icon_like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_link`.
    var icon_link: RswiftResources.ImageResource { .init(name: "icon_link", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_share`.
    var icon_share: RswiftResources.ImageResource { .init(name: "icon_share", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `novel_bg`.
    var novel_bg: RswiftResources.ImageResource { .init(name: "novel_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `novel_cover`.
    var novel_cover: RswiftResources.ImageResource { .init(name: "novel_cover", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `novel_v`.
    var novel_v: RswiftResources.ImageResource { .init(name: "novel_v", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pinlayout-logo-text`.
    var pinlayoutLogoText: RswiftResources.ImageResource { .init(name: "pinlayout-logo-text", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rightArrow`.
    var rightArrow: RswiftResources.ImageResource { .init(name: "rightArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `tweets.json`.
    var tweetsJson: RswiftResources.FileResource { .init(name: "tweets", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}